@model IEnumerable<WebApp.Models.PhotoDataModel>

@using GridMvc.Html
@{
    ViewBag.Title = "Details";
}
@{
    Layout = null;
}
<style>
    .grid-Container {
        position: relative;
        width: 100%;
        height: 100%;
        background-color: gainsboro;
    }
    .grid-header-title {
        background: darkgray;
        text-align: center;
    }
    .grid-header-title a{
        color:black;
    }
    .grid-row {
        border: 1px solid currentColor;
    }
    .grid-footer{
        position:absolute;
        bottom:0px;
        left:5px;
    }
</style>

<div class="code-cut grid-Container" >
    @Html.Grid(Model).Columns(columns =>
{
columns.Add(c => c.Id).Titled("File ID").Filterable(false);

columns.Add(c => c.FileName).Titled("File Name").Filterable(true)
.Encoded(false)
.Sanitized(false)
.RenderValueAs(c =>@<a class="download-file1" style="cursor:pointer;" onclick='openImageInCanvas("@c.Id")'>
                        @c.FileName </a>);

columns.Add().Titled("Image Preview")
.Encoded(false)
.Sanitized(false)
.SetWidth(70)
.RenderValueAs(c => @<div style="width: 70px; cursor: pointer;">
    @*<img alt="Image" src='@Url.Action("DownloadFile", "Dashboard", new { fileId = c.Id })' width="100" height="100" />*@
    <img alt="Image" src=@VirtualPathUtility.ToAbsolute(c.ImageVirtualPath) onclick='openImageInCanvas("@c.Id")' width="70" height="70" />
</div>);

}).WithPaging(5).Sortable(true).Selectable(true).Named("photoGridView")
</div>
